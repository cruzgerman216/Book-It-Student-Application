{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../bookshelf.service\";\nimport * as i3 from \"@angular/forms\";\nexport let BookshelfEditComponent = /*#__PURE__*/(() => {\n  class BookshelfEditComponent {\n    constructor(route, bookshelfService, router) {\n      this.route = route;\n      this.bookshelfService = bookshelfService;\n      this.router = router;\n      this.isEditMode = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        params['id'] ? this.isEditMode = true : this.isEditMode = false;\n        this.id = +params['id'];\n      });\n      this.formInit();\n    }\n\n    formInit() {\n      // iseditmode is true -> add the values to the form already\n      // iseditmode is false -> make the form empty\n      let title = '';\n      let author = '';\n      let genre = '';\n      let coverImagePath = '';\n      let price = 0;\n\n      if (this.isEditMode) {\n        // i need the id of the book [x]\n        // get the book from bookshelfService\n        let book = this.bookshelfService.getBook(this.id);\n        title = book.title;\n        author = book.author;\n        genre = book.genre;\n        coverImagePath = book.coverImagePath;\n        price = book.price;\n        console.log(book);\n      } // add the values to the form\n\n\n      this.bookForm = new FormGroup({\n        title: new FormControl(title, [Validators.required]),\n        author: new FormControl(author, [Validators.required]),\n        genre: new FormControl(genre, [Validators.required]),\n        coverImagePath: new FormControl(coverImagePath, [Validators.required]),\n        price: new FormControl(price, [Validators.required])\n      });\n    }\n\n    onSubmit() {\n      // editmode is true -> update the book -> bookshelfService\n      // editmode is false -> add the book -> bookshelfService\n      if (this.isEditMode) {\n        // call a method from our bookshelfService\n        // that updates the book\n        this.bookshelfService.updateBook(this.bookForm.value, this.id);\n      } else {\n        this.bookshelfService.saveBook(this.bookForm.value);\n      }\n    }\n\n    onCancel() {\n      // localhost:4200/bookshelf\n      this.router.navigate(['/bookshelf']);\n    }\n\n  }\n\n  BookshelfEditComponent.ɵfac = function BookshelfEditComponent_Factory(t) {\n    return new (t || BookshelfEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BookshelfService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  BookshelfEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BookshelfEditComponent,\n    selectors: [[\"app-bookshelf-edit\"]],\n    decls: 33,\n    vars: 5,\n    consts: [[1, \"form-group\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"title\", \"name\", \"title\", \"id\", \"title\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"author\", \"name\", \"author\", \"id\", \"author\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"price\", \"name\", \"price\", \"id\", \"price\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"genre\", 1, \"form-control\"], [\"value\", \"Horror\"], [\"value\", \"Science\"], [\"value\", \"Fiction\"], [\"value\", \"Non-fiction\"], [\"formControlName\", \"coverImagePath\", \"name\", \"coverImagePath\", \"id\", \"coverImagePath\", \"type\", \"text\", 1, \"form-control\"], [\"width\", \"100px\", 3, \"src\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 2, \"margin-right\", \"5px\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", 3, \"click\"]],\n    template: function BookshelfEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function BookshelfEditComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4, \"Title: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 1);\n        i0.ɵɵelementStart(6, \"label\");\n        i0.ɵɵtext(7, \"Author: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 2);\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10, \"Price: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 3);\n        i0.ɵɵelementStart(12, \"label\");\n        i0.ɵɵtext(13, \"Genre: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"select\", 4);\n        i0.ɵɵelementStart(15, \"option\", 5);\n        i0.ɵɵtext(16, \"Horror\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"option\", 6);\n        i0.ɵɵtext(18, \"Science\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"option\", 7);\n        i0.ɵɵtext(20, \"Fiction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"option\", 8);\n        i0.ɵɵtext(22, \"Non-fiction\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"label\");\n        i0.ɵɵtext(24, \"Cover Image Path: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 9);\n        i0.ɵɵelement(26, \"img\", 10);\n        i0.ɵɵelement(27, \"hr\");\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵelementStart(29, \"button\", 11);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function BookshelfEditComponent_Template_button_click_31_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(32, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Mode\" : \"Add New Book\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.bookForm);\n        i0.ɵɵadvance(24);\n        i0.ɵɵproperty(\"src\", ctx.bookForm.value.coverImagePath, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.bookForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Save Book\" : \"Add Book\", \" \");\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return BookshelfEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}